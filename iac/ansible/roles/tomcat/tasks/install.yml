---
- name: Create group
  group:
    name: "{{ tomcat_group }}"
    state: present

- name: Create user
  user:
    name: "{{ tomcat_user }}"
    group: "{{ tomcat_group | default(omit) }}"
    groups: "{{ tomcat_group }}"
    append: "yes"
    state: present
    shell: /bin/bash
    system: no
    createhome: yes
    home: "/home/{{ tomcat_user }}"
  ignore_errors: yes 

- name: Install package and etc.
  package:
    name: "{{ packages }}"
    state: present
  vars:
    packages:
    - java-1.8.0-openjdk.x86_64
    - java-1.8.0-openjdk-devel.x86_64
    - policycoreutils-python
    - wget
    - nano
  environment: "{{item}}"
  with_items: "{{proxy_env}}"

- name: Creates directory - for logs and install
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ tomcat_user }}"
    group: "{{ tomcat_group }}"
    mode: 0700
  with_items:
    - "{{ tomcat_logs_path }}"
    - "{{ tomcat_install_path }}"

- name: Check Tomcat version
  command: "java -cp {{ tomcat_install_path }}/lib/catalina.jar org.apache.catalina.util.ServerInfo | grep 'Server version' | sed 's/Server version: //g'"
  register: tomcat_check
  changed_when: false
  ignore_errors: true

- name: Download & Extract Tomcat
  unarchive:
    extra_opts: ['--strip-components=1']
    src: "{{ tomcat_url }}"
    remote_src: yes
    dest: "{{ tomcat_install_path }}"
    owner: "{{ tomcat_user }}"
    group: "{{ tomcat_group }}"
    mode: 0750
  when: 'tomcat_force_reinstall or tomcat_check is failed or tomcat_check.stdout == "Apache Tomcat/tomcat_version"'

- name: Copy Daemon script
  template:
    src: tomcat.service.j2
    dest: /etc/systemd/system/tomcat.service
    mode: 0644
  notify: restart tomcat