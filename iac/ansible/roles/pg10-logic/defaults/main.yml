---
postgresql_version: "10"
PGDATA10: "/usr/share/pgsql{{ postgresql_version }}"
postgresql_daemon: "postgresql"
postgresql_restarted_state: "restarted"
postgresql_bin_path: "/usr/pgsql-{{ postgresql_version }}/bin"

# INSTALL
#==============================================================================
postgresql_packages:
  - "postgresql{{ postgresql_version }}"
  - "postgresql{{ postgresql_version }}-server"
  - "postgresql{{ postgresql_version }}-contrib"
  - "postgresql{{ postgresql_version }}-libs"
  - "postgresql{{ postgresql_version }}-devel"
  - "python-psycopg2"
  - "postgis24_10"

# NETWORK
#==============================================================================
master_ip:  "{{ groups['PG_CLUSTER_MASTER'][0] }}"
slave_ip_1: "{{ groups['PG_CLUSTER_SLAVE'][0] }}"
slave_ip_2: "{{ groups['PG_CLUSTER_SLAVE'][1] }}"
slave_ip: "{{ groups['PG_CLUSTER_SLAVE'] }}"


#REPLICATION USER
replic_user_name: "replication"
replic_user_pass: "11"

  
# postgresql.conf
#==============================================================================
#MASTER
#==============================================
listen_addresses: "*"
archive_dir: "/data/pgsql-archive"
wal_level_master: "logical"
# in logfile segments, 16MB each; 0 disables
wal_keep_segments_master: "64"
# archive_mode - enables archiving; off, on, or always
archive_mode_master: "off"
# archive_command - dir for archive - deletes wall-segment can be copy here
archive_command_master: "'cp %p {{ archive_dir }}/%f'"
   # placeholders: %p = path of file to archive
   #               %f = file name only
#Warning : if, like me, you use rsync, be sure to configure the ssh access by keys !! 
synchronous_commit: "remote_apply"
max_replication_slots: "10"
max_connections: "100"
# max number of walsender processes
max_wal_senders_master: "{{ slave_ip | length * 2 }}"

#SLAVE
#==============================================
postgresql_conf_slave:
- { regexp: "^#?hot_standby = .*$", replace: "hot_standby = 'on'" }

  
# pg_hba.conf
#============================================================================
# Host based authentication (hba) entries to be added to the pg_hba.conf. This
# variable's defaults reflect the defaults that come with a fresh installation.
# TYPE  DATABASE        USER            ADDRESS                 METHOD
postgresql_hba_entries:
  - {type: local, database: all, user: postgres, auth_method: peer}
  - {type: local, database: all, user: all, auth_method: peer}
  - {type: host, database: all, user: all, address: '127.0.0.1/32', auth_method: md5}
  - {type: host, database: all, user: all, address: '::1/128', auth_method: md5}
  - {type: host, database: all, user: all, address: '{{ master_ip }}/32', auth_method: md5}
  - {type: host, database: replication, user: postgres, address: '{{ slave_ip_1 }}/32', auth_method: trust}
  - {type: host, database: replication, user: postgres, address: '{{ slave_ip_2 }}/32', auth_method: trust} 
  - {type: host, database: replication, user: '{{replic_user_name}}', address: '{{ slave_ip_1 }}/32', auth_method: trust}
  - {type: host, database: replication, user: '{{replic_user_name}}', address: '{{ slave_ip_2 }}/32', auth_method: trust} 

