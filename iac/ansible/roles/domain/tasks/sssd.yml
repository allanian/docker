---
- name: set new hostname with domain
  hostname:
      name: "{{ansible_hostname}}.{{domain}}"

- name: install packages required to join to ldap realm centos
  package:
    name: "{{ item }}"
    state: latest
  with_items: "{{ ldap_packages_centos }}"
  when: ansible_facts['distribution'] == "CentOS"
    
- name: install packages required to join to ldap realm ubuntu
  package:
    name: "{{ item }}"
    state: latest
  with_items: "{{ ldap_packages_ubuntu }}"
  when: ansible_facts['distribution'] == "Ubuntu"

- name: configure sshd PubkeyAuthentication, AuthorizedKeysCommand and AuthorizedKeysCommandUser
  lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: '{{item.regexp}}'
    line: '{{item.line}}'
    state: present
    create: yes
  with_items:
    - { regexp: '^(.*)PubkeyAuthentication (.*)$', line: 'PubkeyAuthentication yes' }
    - { regexp: '^(.*)AuthorizedKeysCommand (.*)$', line: 'AuthorizedKeysCommand /usr/bin/sss_ssh_authorizedkeys' }
    - { regexp: '^(.*)AuthorizedKeysCommandUser (.*)$', line: 'AuthorizedKeysCommandUser nobody' }
  notify:
    - restart sshd
    
- name: install pexpect using pip
  pip:
    name: pexpect
      
- name: check if machine is bound
  shell: "realm list -n | grep {{domain}} || true"
  register: realmd_bound
  changed_when: false

- name: leaving Realm
  command: /bin/bash -c "realm leave"
  when: 
  - realmd_bound.stdout == ""
  ignore_errors: true
      
- name: stop sssd
  service:
    name: sssd
    state: stopped

- name: Removing existing config files
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - /etc/sssd/sssd.conf
  when: 
  - realmd_bound.stdout == ""
  
- name: join active directory domain centos
  shell: "sudo echo '{{ bind_password }}' | /usr/sbin/realm join --user={{bind_username}} --membership-software=adcli --computer-ou='ou={{ad_ou}},{{domain_project_base}}' {{domain}}"
  #shell: "sudo echo '{{ bind_password }}' | /usr/sbin/realm join --user={{bind_username}} --membership-software=adcli --computer-ou=\"ou={{ad_ou}},{{domain_project_base}}\" {{domain}}"
#  no_log: True
  when: 
  - realmd_bound.stdout == ""
  - ansible_facts['distribution'] == "CentOS"
  register: check_join
  become: yes

- name: join active directory domain ubuntu
  shell: "sudo echo '{{ bind_password }}' | realm join --user={{bind_username}} --computer-ou=\"ou={{ad_ou}},{{domain_project_base}}\" {{domain}} --install=/"
  when: 
  - realmd_bound.stdout == ""
  - ansible_facts['distribution'] == "Ubuntu"
  register: check_join
  become: yes

- name: generate ldap access filter
  set_fact:
    access_filter: "(|(memberOf=cn={{ access_groups | join(',ou={{ad_ou}},{{domain_project_base}})(memberOf=cn=')}},ou={{ad_ou}},{{domain_project_base}})(memberOf=cn={{admin_access_group}},{{domain_project_base}}))"

- name: generate user search filter
  set_fact:
    user_search_filter: "{{ domain_user_bases | join('???')}}??"

- name: generate group search filter
  set_fact:
    group_search_filter: "{{ domain_group_bases | join('???')}}??"

- name: add default_domain_suffix to sssd.conf
  ini_file:
    path: /etc/sssd/sssd.conf
    section: '{{item.section}}'
    option: '{{item.option}}'
    value: '{{item.value}}'
    mode: '0600'
  with_items:
    - { section: 'sssd', option: 'default_domain_suffix', value: '{{ domain }}' }
    - { section: 'sssd', option: 'services', value: 'nss, pam, ssh' }
    - { section: 'domain/{{domain}}', option: 'override_homedir', value: '/home/%d/%u' }
    - { section: 'domain/{{domain}}', option: 'fallback_homedir', value: '/home/%d/%u' }
    - { section: 'domain/{{domain}}', option: 'ldap_user_ssh_public_key', value: 'altSecurityIdentities' }
    - { section: 'domain/{{domain}}', option: 'ldap_user_search_base', value: '{{user_search_filter}}' }
    - { section: 'domain/{{domain}}', option: 'ldap_group_search_base', value: '{{group_search_filter}}' }
    - { section: 'domain/{{domain}}', option: 'ad_access_filter', value: '{{access_filter}}' }
  notify:
    - restart sssd
    
- name: copy configuration to /etc/sudoers.d
  template:
    src: ad.j2
    dest: /etc/sudoers.d/ad

- name: set correct permissions to domain users home
  file:
    path: /home/{{domain}}
    state: directory
    owner: root
    group: root
    mode: 0755

- name: Ubuntu 16.04 and older creation home dirs fix
  lineinfile:
    dest: /etc/pam.d/common-session
    line: 'session required pam_mkhomedir.so skel=/etc/skel/ umask=0022'
    insertafter: 'session required pam_unix.so'
    state: present
    create: yes
  when: ansible_distribution == "Ubuntu"
  notify:
  - restart sssd
  - restart sshd

