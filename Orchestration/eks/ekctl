# FARGATE PRICING
- AWS Fargate pricing is calculated based on the **vCPU and memory** resources used from the time you start to download your container image until the EKS Pod terminates.
- **Reference:** https://aws.amazon.com/fargate/pricing/    
- Amazon EKS support for AWS Fargate is available in us-east-1, us-east-2, eu-west-1, and ap-northeast-1.

aws eks
#### Step-00: install software
aws cli, ekctl
# then go to iam, my user
security credentials/access keys/create access keys
# on server, 
aws configure
AWS Access Key ID [None]:exampleKeyID
AWS Secret Access Key: exampleAccessKey
Default region name us-west-2 (can be any)
Default output format [None]: json (can be yaml)

#### Step-01: Create EKS Cluster using eksctl
# Create Cluster
eksctl create cluster \
--name QA \
--tags Name=QA \
--version 1.18 \
--region us-west-2 \
--nodegroup-name ng-qa \
--nodes 3 \
--nodes-min 2 \
--nodes-max 3 \
--fargate 
# Get List of clusters
eksctl get clusters  
# delete cluster
eksctl delete cluster --name my-cluster

### Step-02: Create & Associate IAM OIDC Provider for our EKS Cluster
To enable and use AWS IAM roles for Kubernetes service accounts on our EKS cluster, we must create & associate OIDC identity provider.
To do so using eksctl we can use the below command.
################ Maybe don't needed
aws eks describe-cluster --name QA --query "cluster.identity.oidc.issuer" --output text
https://oidc.eks.us-west-2.amazonaws.com/id/EXAMPLED539D4633E53DE1B716D3041E
## ist the IAM OIDC providers in your account. Replace <EXAMPLED539D4633E53DE1B716D3041E> (including <>) with the value returned from the previous command.
aws iam list-open-id-connect-providers | grep CE6FCFEA16144B1843EF64B838AC91C3
Example output
"Arn": "arn:aws:iam::111122223333:oidc-provider/oidc.eks.us-west-2.amazonaws.com/id/EXAMPLED539D4633E53DE1B716D3041E"
#######################################
# Template
eksctl utils associate-iam-oidc-provider \
    --region region-code \
    --cluster <cluter-name> \
    --approve

# Replace with region & cluster name
eksctl utils associate-iam-oidc-provider \
    --region us-west-2 \
    --cluster QA \
    --approve


5) Controller AWS Load balancer
https://docs.aws.amazon.com/eks/latest/userguide/aws-load-balancer-controller.html
5.1) # check IAM OIDC
aws eks describe-cluster --name <cluster_name> --query "cluster.identity.oidc.issuer" --output text
aws eks describe-cluster --name QA --query "cluster.identity.oidc.issuer" --output text
Пример вывода:
https://oidc.eks.us-west-2.amazonaws.com/id/EXAMPLED539D4633E53DE1B716D3041E
Перечислите поставщиков IAM OIDC в своей учетной записи. Заменить <EXAMPLED539D4633E53DE1B716D3041E>(включая <>) значением, возвращенным предыдущей командой.
aws iam list-open-id-connect-providers | grep <EXAMPLED539D4633E53DE1B716D3041E>
Если результат возвращается предыдущей командой, значит, у вас уже есть провайдер для вашего кластера. Если выходные данные не возвращаются, необходимо создать поставщика IAM OIDC.
5.2) Загрузите политику IAM для контроллера AWS Load Balancer Controller, которая позволяет ему выполнять вызовы API AWS от вашего имени. Вы можете просмотреть документ политикина GitHub. Используйте команду, соответствующую региону, в котором находится ваш кластер.
curl -o iam_policy.json https://raw.githubusercontent.com/kubernetes-sigs/aws-load-balancer-controller/v2.1.0/docs/install/iam_policy.json
5.3) Создайте политику IAM, используя политику, загруженную на предыдущем шаге.
aws iam create-policy \
    --policy-name AWSLoadBalancerControllerIAMPolicy \
    --policy-document file://iam_policy.json
    
  "Policy": {
        "PolicyName": "AWSLoadBalancerControllerIAMPolicy",
        "PolicyId": "ANPAW5A7V7JN6WDOU7MYK",
        "Arn": "arn:aws:iam::<AWS_ACCOUNT_ID>:policy/AWSLoadBalancerControllerIAMPolicy",
        "Path": "/",
        "DefaultVersionId": "v1",
        "AttachmentCount": 0,
        "PermissionsBoundaryUsageCount": 0,
        "IsAttachable": true,
        "CreateDate": "2021-01-26T06:26:00+00:00",
        "UpdateDate": "2021-01-26T06:26:00+00:00"
5.4) Создайте роль IAM и аннотируйте сервисный аккаунт Kubernetes, названный aws-load-balancer-controllerв kube-system пространстве имен для AWS Load Balancer Controller, используя один из следующих вариантов.
Использование eksctl, используйте следующую команду:
  eksctl create iamserviceaccount \
  --cluster=QA \
  --namespace=kube-system \
  --name=aws-load-balancer-controller \
  --attach-policy-arn=arn:aws:iam::<AWS_ACCOUNT_ID>:policy/AWSLoadBalancerControllerIAMPolicy \
  --override-existing-serviceaccounts \
  --approve
                
<AWS_ACCOUNT_ID> - можно взять из 5.3 в строчке Arn
<AWSLoadBalancerControllerIAMPolicy> - в строчке 5.3 Arn

5.5) check existing AWS ALB ingress controller, need delete it.
kubectl get deployment -n kube-system alb-ingress-controller
Error from server (NotFound): deployments.apps "alb-ingress-controller" not found
5.6) Установите AWS Load Balancer Controller одним из следующих способов:
HELM:
#Install the TargetGroupBinding custom resource definitions.
kubectl apply -k "github.com/aws/eks-charts/stable/aws-load-balancer-controller//crds?ref=master"
#Add the eks-charts repository.
helm repo add eks https://aws.github.io/eks-charts
# Install the AWS Load Balancer Controller using the command that corresponds to the Region that your cluster is in.
# For FARGATE !!!
helm upgrade -i aws-load-balancer-controller eks/aws-load-balancer-controller \
  --set clusterName=QA \
  --set serviceAccount.create=false \
  --set serviceAccount.name=aws-load-balancer-controller \
  --set region=us-west-2 \
  --set vpcId=<vpc-xxxxxxxx> \
  -n kube-system
# vpcId можно найти на странице кластера в AWS
5.7) Verify
kubectl get deployment -n kube-system aws-load-balancer-controller
NAME                           READY   UP-TO-DATE   AVAILABLE   AGE
aws-load-balancer-controller   1/1     1            1           23m


5.8) FARGATE PROFILE
# get profiles
eksctl --cluster QA get fargateprofile
# create new fargateprofile
eksctl create fargateprofile --cluster QA --region us-west-2 --name shakti --namespace shakti --labels name=qa
# delete
eksctl --cluster QA delete fargateprofile --name alb-sample-app


6) 
https://www.stacksimplify.com/aws-eks/aws-alb-ingress/install-externaldns-on-aws-eks/
6.1) create iam policy
Перейдите в Services -> IAM -> Policies -> Create Policy -> Json Tab -> paste json below
Name -> AllowExternalDNSUpdates
Description -> Allow access to Route53 Resources for ExternalDNS

{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Effect": "Allow",
      "Action": [
        "route53:ChangeResourceRecordSets"
      ],
      "Resource": [
        "arn:aws:route53:::hostedzone/*"
      ]
    },
    {
      "Effect": "Allow",
      "Action": [
        "route53:ListHostedZones",
        "route53:ListResourceRecordSets"
      ],
      "Resource": [
        "*"
      ]
    }
  ]
}

Запишите Политику ARN, которую мы будем использовать на следующем шаге.
arn:aws:iam::180789647333:policy/AllowExternalDNSUpdates

6.2) Create IAM Role, k8s Service Account & Associate IAM Policy
As part of this step, we are going to create a k8s Service Account named external-dns and also a AWS IAM role and associate them by annotating role ARN in Service Account.
In addition, we are also going to associate the AWS IAM Policy AllowExternalDNSUpdates to the newly created AWS IAM Role.
Create IAM Role, k8s Service Account & Associate IAM Policy
# Template
eksctl create iamserviceaccount \
    --name service_account_name \
    --namespace service_account_namespace \
    --cluster cluster_name \
    --attach-policy-arn IAM_policy_ARN \
    --approve \
    --override-existing-serviceaccounts

# Replaced name, namespace, cluster, arn 
eksctl create iamserviceaccount \
    --name external-dns \
    --namespace default \
    --cluster QA \
    --attach-policy-arn arn:aws:iam::180789647333:policy/AllowExternalDNSUpdates \
    --approve \
    --override-existing-serviceaccounts

--attach-policy-arn arn:aws:iam::180789647333:policy/AllowExternalDNSUpdates  - можно взять IAM-POLICY-NAME-ARN ID
#Verify the Service Account
kubectl get sa external-dns

6.3) Update External DNS Kubernetes manifest
CHANGE LINE 9, copy from IAM-POLICY-NAME-ARN ID


























6) EXAMPLE Balancing 
# example
eksctl create fargateprofile --cluster QA --region us-west-2 --name alb-sample-app --namespace game-2048
kubectl apply -f https://raw.githubusercontent.com/kubernetes-sigs/aws-load-balancer-controller/v2.1.0/docs/examples/2048/2048_full.yaml
kubectl get ingress/ingress-2048 -n game-2048
NAME           CLASS    HOSTS   ADDRESS                                                                   PORTS   AGE
ingress-2048   <none>   *       k8s-game2048-ingress2-xxxxxxxxxx-yyyyyyyyyy.us-west-2.elb.amazonaws.com   80      2m32s
Откройте браузер и перейдите по ADDRESS URL-адресу из предыдущего вывода команды, чтобы увидеть пример приложения. Если вы ничего не видите, подождите несколько минут и обновите страницу в браузере.
# check
kubectl logs -n kube-system   deployment.apps/aws-load-balancer-controller
# delete
kubectl delete -f https://raw.githubusercontent.com/kubernetes-sigs/aws-load-balancer-controller/v2.1.0/docs/examples/2048/2048_full.yaml






4.5) предоставления разрешений IAM модулю Fargate
eksctl utils associate-iam-oidc-provider --cluster QA --approve



4) generate kubeconfig
aws eks --region us-west-2 update-kubeconfig --name QA

kubectl get svc
NAME         TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)   AGE
kubernetes   ClusterIP   10.100.0.1   <none>        443/TCP   28m

5) API server endpoint
export KUBECONFIG=$KUBECONFIG:/opt/.kube/configs/qa.yml









