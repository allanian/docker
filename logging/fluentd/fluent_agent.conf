<source>
  @type tail
  @id input_tail_containers
  path /logs/docker_logs/*/*-json.log
  pos_file /data/docker.pos
  read_from_head true
  #tag "docker.**"
  tag "raw.docker.**"
  skip_refresh_on_startup false
  refresh_interval 10s
  enable_watch_timer true
  enable_stat_watcher false
  <parse>
    @type "json"
    time_format %Y-%m-%dT%H:%M:%S.%NZ
    #localtime
  </parse>
</source>

# ignore fluent logs
<label @FLUENT_LOG>
  <match fluent.**>
    @type null
  </match>
</label>

# send all exception in 1 block 
<match raw.docker.**>
  @id raw.docker
  @type detect_exceptions
  remove_tag_prefix raw
  message log
  stream stream
  multiline_flush_interval 5
  max_bytes 500000
  max_lines 1000
</match>

# exclude line
<filter docker.logs.**>
  @type grep
  <exclude>
    key log
    #pattern /^Got notified from Channel as inactive, attempting reconnect.+$/
    pattern /Got notified from Channel as inactive/
  </exclude>
</filter>

# add new tag on pattern (servise_name in docker-compose)
<match docker.logs.**>
  @type rewrite_tag_filter
  <rule>
   key $['attrs']['service_name']
   pattern ^(.*)
   tag "docker.#{ENV['env']}"
  </rule>
</match>

# add hostname field
<filter "docker.#{ENV['env']}">
  @type record_transformer
  enable_ruby
  <record>
    hostname "#{Socket.gethostname}"
 </record>
</filter>

<filter "docker.#{ENV['env']}">
  @type parser
  format json
  key_name log
  reserve_data true
</filter>

# default concat
<filter "docker.#{ENV['env']}">
  @type concat
  key log
  use_partial_metadata true
  separator ""
</filter>

<match "docker.#{ENV['env']}">
  @type forward
  @id forward_docker
  <server>
    name main_server
    host "#{ENV['collector_ip']}" 
    port 24224
  </server>
  <buffer>
    @type file
    path /data/buffers
    flush_mode interval
    retry_type exponential_backoff
    flush_thread_count 2
    flush_interval 2s
    retry_forever
    retry_max_interval 30
    chunk_limit_size 4M
    queue_limit_length 512
    overflow_action block
  </buffer>
</match>




#dont worked
#<filter "docker.#{ENV['env']}">
#  @type concat
#  key log
#  stream_identity_key $['attrs']['tag']
#  multiline_start_regexp /^.+[_\\\/|].+/
#  multiline_end_regexp /^.+Spring Boot.+$/
#</filter>

#<filter "docker.#{ENV['env']}">
#  @type concat
#  key log
#  stream_identity_key $['attrs']['tag']
#  multiline_start_regexp /^Caused by:[^\n]++(\s+at .++)+/
#  #multiline_end_regexp /^-e:4:in/
#</filter>