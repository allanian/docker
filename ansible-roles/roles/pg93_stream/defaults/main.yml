---
postgresql_version: "9.3"
postgresql_version_nodots: "93"
PGDATA93: "/data/pgsql/{{ postgresql_version_nodots }}"
postgresql_daemon: "postgresql"
postgresql_restarted_state: "restarted"
postgresql_bin_path: "/usr/pgsql-{{ postgresql_version }}/bin"

# INSTALL
#==============================================================================
postgresql_packages:
  - "postgresql{{ postgresql_version_nodots }}"
  - "postgresql{{ postgresql_version_nodots }}-server"
  - "postgresql{{ postgresql_version_nodots }}-contrib"
  - "postgresql{{ postgresql_version_nodots }}-libs"
  - "postgresql{{ postgresql_version_nodots }}-devel"
  - "python-psycopg2"
  - "python-devel"

# NETWORK
#==============================================================================
master_ip:  "{{ groups['PG_MASTER'][0] }}"
slave_ip: "{{ groups['PG_REPLICA'] }}"

# for recovery
master_ip_recovery: "{{ hostvars[master_ip]['ansible_default_ipv4']['address'] }}"
replica_ip_recovery: "{{ hostvars[slave_ip]['ansible_default_ipv4']['address'] }}"

pg_network: "{{ hostvars[master_ip]['ansible_default_ipv4']['network'] }}"

# REPLICATION USER
replic_user_name: "replication"
replic_user_pass: "replication"

# COUNT OF REPLICs !!!!!!!!!
# recovery.conf
application_name1: "s1"
application_name2: "s2"
application_name3: "s3"

# postgresql.conf
#==============================================================================
#MASTER
#==============================================

postgres_settings:
  listen_addresses: "*"
  wal_level: hot_standby
  synchronous_commit: on
  max_wal_senders: "{{ slave_ip | length * 2 }}"
  wal_keep_segments: 100
  hot_standby: on
  wal_sender_timeout: 5000
  wal_receiver_status_interval: 2
  max_standby_streaming_delay: -1
  max_standby_archive_delay: -1
  restart_after_crash: false
  hot_standby_feedback: true
  synchronous_standby_names: '{{application_name1}},{{application_name2}},{{application_name3}})'

# SLAVE
#==============================================
postgresql_conf_slave:
- { regexp: "^#?hot_standby = .*$", replace: "hot_standby = 'on'" }

# pg_hba.conf
#============================================================================
# Host based authentication (hba) entries to be added to the pg_hba.conf. This
# variable's defaults reflect the defaults that come with a fresh installation.
# TYPE  DATABASE        USER            ADDRESS                 METHOD
postgresql_hba_entries:
  - {type: local, database: all, user: postgres, auth_method: trust}
  - {type: local, database: all, user: all, auth_method: peer}
  - {type: host, database: all, user: all, address: '127.0.0.1/32', auth_method: md5}
  - {type: host, database: all, user: all, address: '::1/128', auth_method: md5}
  - {type: host, database: all, user: all, address: '{{ master_ip_recovery }}/32', auth_method: md5}
  - {type: host, database: all, user: postgres, address: '{{ pg_network }}/24', auth_method: md5}