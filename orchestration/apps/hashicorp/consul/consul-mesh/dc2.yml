global:
  name: consul
  datacenter: dc2
  tls:
    enabled: true
    enableAutoEncrypt: true
    verify: false
    httpsOnly: false
    serverAdditionalDNSSANs: ["'*.consul.svc.cluster.local'"]
    caCert:
      secretName: consul-federation
      secretKey: caCert
    caKey:
      secretName: consul-federation
      secretKey: caKey
  acls:
    manageSystemACLs: true
#    bootstrapToken:
#      secretName: consul-acl-bootstrap-token
#      secretKey: token
    # SECONDARY DATACENTER ONLY
    replicationToken:
      secretName: consul-federation
      secretKey: replicationToken
  federation:
    enabled: true
  gossipEncryption:
    secretName: consul-federation
    secretKey: gossipEncryptionKey

server:
  replicas: 1
  storage: 5Gi
  storageClass: "linode-block-storage-retain"
  connect: true
  # Server service properties.
  service:
    annotations: null
  extraVolumes:
    - type: secret
      name: consul-federation
      items:
        - key: serverConfigJSON
          path: config.json
      load: true

connectInject:
  enabled: true
controller:
  enabled: false
  replicas: 1

externalServers:
  enabled: false

ui:
  service:
    enabled: true
    type: LoadBalancer
    nodePort:
      # HTTP node port
      http: null
      # HTTPS node port
      https: null
    annotations: null
  ingress:
    enabled: false
    pathType: Prefix
    hosts:
      - host: consul-dc2.company.com
        paths:
          - "/*"
    annotations: |
      'kubernetes.io/ingress.class': alb


# Mesh Gateways enable Consul Connect to work across Consul datacenters.
meshGateway:
  enabled: true
  replicas: 1
# Service STATIC
  wanAddress:
    source: "Service"
    port: 443
    static: "consulserv-dc2.company.com"

  service:
    enabled: true
    type: LoadBalancer
    port: 443
    annotations: |
      'external-dns.alpha.kubernetes.io/hostname': consulserv-dc2.company.com

#Use Ingress gateways to enable services outside the mesh (i.e., no sidecar) to connect to services in the mesh.
ingressGateways:
  enabled: true
  defaults:
    replicas: 1
    service:
      type: LoadBalancer
      ports:
        - port: 80
        - port: 443
        - port: 8080
          nodePort: null
        - port: 8443
          nodePort: null
  gateways:
    - name: ingress-gateway
      service:
        type: LoadBalancer

#Use terminating gatways to enable services in the mesh to communicate with services outside the mesh that do not have their own sidecar.
terminatingGateways:
  enabled: true
  gateways:
    - name: terminating-gateway
